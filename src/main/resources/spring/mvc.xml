<?xml version="1.0" encoding="GBK"?>
<!-- 
	配置文件约束：dtd  document type definition  
	           xsd xml schema definition
	ns：name space 命名空间 每一个schema的唯一标识
	作用：告知spring，生产哪些组件     
 -->
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"  
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	                       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	                       http://www.springframework.org/schema/context
	                       http://www.springframework.org/schema/context/spring-context-3.2.xsd
	                       http://www.springframework.org/schema/mvc
	                       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<!-- 要扫描的包，包中的类里的注解会被发现
	     use-default-filters 默认为true
	     true=只要类上包含  @Controller  @Service  @Repository   @Component其中一个，则类会被扫描
	     false=不扫描任何类
	
	 -->
	 
	<context:component-scan base-package="com.wsh" use-default-filters="false">
		<!-- 只扫描 类上有  @Controller注解的-->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
 	</context:component-scan>
	<!-- 注册注解开发驱动，使得，扫描到的注解可以被解析 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<!-- content-type -->
						<value>application/json</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 视图解析器：解析视图 
		 解析行为：1.捕获后端的返回值 : xx
		        2.为返回值拼接前缀 和 后缀  =  /xx.jsp
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 
		有此配置，会额外追加一个映射=(/**):(DefaultServletHttpRequestHandler)
		/**= /a  /b  /a/b/c   /a/b/c.html   /a/b/c.jpg  /a/b/c.xxx
		此handler在最后匹配请求=请求到达此handler时，会被转向对应的静态资源
	 -->
	<mvc:default-servlet-handler/>
</beans>